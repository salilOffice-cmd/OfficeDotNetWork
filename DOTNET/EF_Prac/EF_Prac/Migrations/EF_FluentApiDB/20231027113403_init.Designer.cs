// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartDataTest2.EF.FluentApi;

#nullable disable

namespace EF_Prac.Migrations.EF_FluentApiDB
{
    [DbContext(typeof(EF_FluentApiDBContext))]
    [Migration("20231027113403_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartDataTest2.EF.FluentApi.Models.Employee", b =>
                {
                    b.Property<int>("Emp_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Emp_Id"), 100L, 5);

                    b.Property<string>("Emp_Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(200)")
                        .HasDefaultValue("Guest")
                        .HasColumnName("MyOwnName");

                    b.Property<int>("OfficeFloorID")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Emp_Id");

                    b.HasIndex("Emp_Name")
                        .IsUnique();

                    b.HasIndex("OfficeFloorID");

                    b.ToTable("Employees", t =>
                        {
                            t.HasCheckConstraint("CheckName", "Emp_name Like 'a%'");
                        });
                });

            modelBuilder.Entity("SmartDataTest2.EF.FluentApi.Models.OfficeFloor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorId"));

                    b.Property<string>("Floor_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FloorId");

                    b.ToTable("OfficeFloor1234", (string)null);
                });

            modelBuilder.Entity("SmartDataTest2.EF.FluentApi.Models.SystemDetail", b =>
                {
                    b.Property<int>("SysDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SysDetailId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SysDetailId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("SystemDetails");
                });

            modelBuilder.Entity("SmartDataTest2.EF.FluentApi.Models.Employee", b =>
                {
                    b.HasOne("SmartDataTest2.EF.FluentApi.Models.OfficeFloor", "OfficeFloor")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeFloorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfficeFloor");
                });

            modelBuilder.Entity("SmartDataTest2.EF.FluentApi.Models.SystemDetail", b =>
                {
                    b.HasOne("SmartDataTest2.EF.FluentApi.Models.Employee", "Employee")
                        .WithOne("SystemDetail")
                        .HasForeignKey("SmartDataTest2.EF.FluentApi.Models.SystemDetail", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SmartDataTest2.EF.FluentApi.Models.Employee", b =>
                {
                    b.Navigation("SystemDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("SmartDataTest2.EF.FluentApi.Models.OfficeFloor", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
